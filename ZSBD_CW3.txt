//zad1
DECLARE
NUMER_MAX int;
NAZWA departments.department_name%type;

BEGIN
SELECT  MAX(DEPARTMENT_ID) INTO NUMER_MAX from DEPARTMENTS;
NAZWA := 'EDUCATION';
INSERT INTO DEPARTMENTS (DEPARTMENT_ID,DEPARTMENT_NAME) VALUES (NUMER_MAX +10,NAZWA) ;
DBMS_OUTPUT.PUT_LINE('Max = '|| NUMER_MAX);
End;


//zad2
DECLARE
NUMER_MAX int;
NAZWA departments.department_name%type;
LOC_ID INT;
BEGIN
SELECT  MAX(DEPARTMENT_ID) INTO NUMER_MAX from DEPARTMENTS;
NAZWA := 'EDUCATION';
LOC_ID := 3000; 
INSERT INTO DEPARTMENTS (DEPARTMENT_ID,DEPARTMENT_NAME,LOCATION_ID) VALUES (NUMER_MAX +10,NAZWA,LOC_ID) ;
DBMS_OUTPUT.PUT_LINE('Max = '|| NUMER_MAX);
End;

//zad3
CREATE TABLE NOWA (POLE VARCHAR(20));
BEGIN
FOR i IN 1..10 LOOP
   if(i!=4)AND(i!=6) then 
    INSERT INTO NOWA (POLE) VALUES (i);
    end if;
  END LOOP;
  END;
  
  //zad4
DECLARE
WSZYSTKIE_ZMIENNE COUNTRIES%ROWTYPE;
BEGIN
SELECT * INTO WSZYSTKIE_ZMIENNE FROM COUNTRIES WHERE COUNTRY_ID = 'CA';
DBMS_OUTPUT.PUT_LINE('NAZWA '|| WSZYSTKIE_ZMIENNE.COUNTRY_NAME || ' REGION ' || WSZYSTKIE_ZMIENNE.REGION_ID);
END;

//ZAD5
DECLARE TYPE DEPARTMENTNAME IS TABLE OF DEPARTMENTS%ROWTYPE INDEX BY PLS_INTEGER;
DEPARTAMENT DEPARTMENTNAME;
ITEN  PLS_INTEGER := 10;
BEGIN 
FOR I IN 1..10
LOOP
ITEN := ITEN*I;
SELECT * INTO DEPARTAMENT(I) FROM DEPARTMENTS WHERE DEPARTMENTS.DEPARTMENT_ID = ITEN;
END LOOP;
FOR I IN DEPARTAMENT.FIRST..DEPARTAMENT.LAST
LOOP
DBMS_OUTPUT.PUT_LINE(DEPARTAMENT(I).DEPARTMENT_NAME);
END LOOP;
END;
//ZAD6

//ZAD7
 DECLARE 
 CURSOR CUR
 IS SELECT SALARY,LAST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID = 50;
 employee   CUR%ROWTYPE;
 BEGIN
 OPEN CUR;
  FETCH CUR INTO employee;
  CLOSE CUR;
 IF(EMPLOYEE.SALARY > 3100) THEN 
 DBMS_OUTPUT.PUT_LINE(EMPLOYEE.LAST_NAME || ' NIE DAWAĆ PODWYŻKI' );
 END IF;
 IF(EMPLOYEE.SALARY < 3100) THEN
  DBMS_OUTPUT.PUT_LINE(EMPLOYEE.LAST_NAME || 'DAĆ PODWYŻKĘ' );
  END IF;
 END;
 
 //ZAD8
 DECLARE
EMPL EMPLOYEES%rowtype;
 CURSOR CUR (SALARYMIN IN EMPLOYEES.SALARY%TYPE,SALARYMAX IN EMPLOYEES.SALARY%TYPE,NAMELIKE IN VARCHAR2)
IS
  SELECT *
  FROM EMPLOYEES
  WHERE FIRST_NAME LIKE '%'||NAMELIKE||'%' AND SALARY BETWEEN SALARYMIN AND SALARYMAX;
  BEGIN
    OPEN CUR(1000,5000,'A');
    LOOP
        FETCH CUR INTO EMPL;
        EXIT WHEN CUR%notfound;
        dbms_output.put_line(EMPL.FIRST_NAME || ' ' || EMPL.LAST_NAME);
    END LOOP;
    CLOSE CUR;

    OPEN CUR(5000,20000,'U');
    LOOP
        FETCH CUR INTO EMPL;
        EXIT WHEN CUR%notfound;
        dbms_output.put_line(EMPL.FIRST_NAME || ' ' || EMPL.LAST_NAME);
    END LOOP;
    CLOSE CUR;
  END;
  
 //ZAD9
 //1
  CREATE OR REPLACE PROCEDURE DZIEWIECJEDEN(ID IN JOBS.JOB_ID%TYPE,TITLE IN JOBS.JOB_TITLE%TYPE)
  IS
  BEGIN
  INSERT INTO JOBS(JOB_ID,JOB_TITLE) VALUES (ID,TITLE);
  EXCEPTION
  WHEN OTHERS THEN 
  raise_application_error (-20002,'An error has occurred inserting an order.');
  END;
  
  //2
    CREATE OR REPLACE PROCEDURE DZIEWIECDWA(ID IN JOBS.JOB_ID%TYPE,TITLE IN JOBS.JOB_TITLE%TYPE)
  IS
  BEGIN
  UPDATE JOBS SET JOB_TITLE = TITLE WHERE JOB_ID = ID;
  IF SQL%ROWCOUNT = 0 THEN  
   DBMS_OUTPUT.PUT_LINE('No rows have been updated');
   END IF;
  END;
  
  //3
    CREATE OR REPLACE PROCEDURE DZIEWIECTRZY(ID IN JOBS.JOB_ID%TYPE,TITLE IN JOBS.JOB_TITLE%TYPE)
  IS
  BEGIN
  delete JOBS WHERE JOB_ID = ID;
  IF SQL%ROWCOUNT = 0 THEN  
   DBMS_OUTPUT.PUT_LINE('No jobs deleted');
   END IF;
  END;
  
  //4
  CREATE OR REPLACE PROCEDURE DZIEWIECCZTERY(ID IN EMPLOYEES.EMPLOYEE_ID%TYPE)
  IS
  EMPLS EMPLOYEES%ROWTYPE;
  BEGIN
  SELECT * INTO EMPLS FROM EMPLOYEES WHERE EMPLOYEE_ID = ID; 
   DBMS_OUTPUT.PUT_LINE(EMPLS.SALARY || ' ' || EMPLS.LAST_NAME);
  END;
  
  //5
    CREATE SEQUENCE EMPL_SEQ
 START WITH  207
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
create or replace PROCEDURE DZIEWIECPIEC(FIRST IN EMPLOYEES.FIRST_NAME%TYPE, LAST IN EMPLOYEES.LAST_NAME%TYPE, EMAI IN EMPLOYEES.EMAIL%TYPE,
   PHONENUMBER IN EMPLOYEES.PHONE_NUMBER%TYPE DEFAULT 123456789, HIREDATE IN EMPLOYEES.HIRE_DATE%TYPE, JOBID IN EMPLOYEES.JOB_ID%TYPE, SAL IN EMPLOYEES.SALARY%TYPE,
   COMMISSIONPCT IN EMPLOYEES.COMMISSION_PCT%TYPE DEFAULT NULL, MANAGERID IN EMPLOYEES.MANAGER_ID%TYPE DEFAULT 0, DEPARTMENTID IN EMPLOYEES.DEPARTMENT_ID%TYPE)
  IS
    salary_too_high  EXCEPTION;
      max_salary NUMBER := 20000;
  BEGIN


  IF SAL > max_salary THEN
      RAISE salary_too_high;  -- raise the exception
    END IF;
  INSERT INTO EMPLOYEES (EMPL_SEQ, FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID) 
  VALUES(EMPL_SEQ.NEXTVAL,FIRST,LAST,EMAI,PHONENUMBER,HIREDATE,JOBID,SAL,COMMISSIONPCT,MANAGERID,DEPARTMENTID); 
      EXCEPTION
    WHEN salary_too_high THEN
    DBMS_OUTPUT.PUT_LINE('Maximum salary is ' || max_salary || '.');
  END ;
