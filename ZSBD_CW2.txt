DROP TABLE REGIONS CASCADE CONSTRAINTS;

DROP TABLE LOCATIONS CASCADE CONSTRAINTS;

DROP TABLE JOBS CASCADE CONSTRAINTS;

DROP TABLE JOB_HISTORY CASCADE CONSTRAINTS;

DROP TABLE EMPLOYEES CASCADE CONSTRAINTS;

DROP TABLE DEPARTMENTS CASCADE CONSTRAINTS;

DROP TABLE COUNTRIES CASCADE CONSTRAINTS;

CREATE TABLE countries AS SELECT * FROM HR.countries 

CREATE TABLE DEPARTMENTS AS SELECT * FROM HR.DEPARTMENTS 

CREATE TABLE EMPLOYEES AS SELECT * FROM HR.EMPLOYEES 

CREATE TABLE JOB_HISTORY AS SELECT * FROM HR.JOB_HISTORY 

CREATE TABLE JOBS AS SELECT * FROM HR.JOBS 

CREATE TABLE LOCATIONS AS SELECT * FROM HR.LOCATIONS 

CREATE TABLE REGIONS AS SELECT * FROM HR.REGIONS 

ALTER TABLE REGIONS
ADD CONSTRAINT region_id
PRIMARY KEY (region_id);

ALTER TABLE COUNTRIES 
ADD CONSTRAINT country_id
PRIMARY KEY (country_id);

ALTER TABLE LOCATIONS 
ADD CONSTRAINT location_id
PRIMARY KEY (location_id);

ALTER TABLE DEPARTMENTS 
ADD CONSTRAINT department_id
PRIMARY KEY (department_id);

ALTER TABLE EMPLOYEES 
ADD CONSTRAINT employee_id
PRIMARY KEY (employee_id);

ALTER TABLE JOB_HISTORY 
ADD CONSTRAINT employeejob_id
PRIMARY KEY (employee_id, start_date);

ALTER TABLE JOBS
ADD CONSTRAINT job_id
PRIMARY KEY (job_id);

ALTER TABLE DEPARTMENTS
ADD CONSTRAINT locCON
FOREIGN KEY(location_id) REFERENCES LOCATIONS(location_id)

ALTER TABLE LOCATIONS
ADD CONSTRAINT counCON
FOREIGN KEY(country_id) REFERENCES COUNTRIES(country_id)

ALTER TABLE COUNTRIES
ADD CONSTRAINT regCON
FOREIGN KEY(region_id) REFERENCES REGIONS(region_id)

ALTER TABLE JOB_HISTORY
ADD CONSTRAINT depCON
FOREIGN KEY(department_id) REFERENCES DEPARTMENTS(department_id)


ALTER TABLE JOB_HISTORY
ADD CONSTRAINT emplCON
FOREIGN KEY(employee_id) REFERENCES EMPLOYEES(employee_id)

ALTER TABLE EMPLOYEES
ADD CONSTRAINT jobCON
FOREIGN KEY(job_id) REFERENCES JOBS(job_id)

ALTER TABLE JOB_HISTORY
ADD CONSTRAINT jobHCON
FOREIGN KEY(job_id) REFERENCES JOBS(job_id)

ALTER TABLE EMPLOYEES
ADD CONSTRAINT deparCON
FOREIGN KEY(department_id) REFERENCES DEPARTMENTS(department_id)

select employees.last_name || ' ' || employees.salary  AS wynagrodzenie
from employees
join DEPARTMENTS on employees.department_id = departments.department_id
where
(departments.department_id = 20 OR
departments.department_id = 50)
and
employees.salary between 2000 and 7000
order by 
employees.last_name

create or replace NONEDITIONABLE PROCEDURE punktDrugi(column_name varchar2) 
IS 

TYPE rec_typ IS RECORD    
       (    
          HIRE_DATE      DATE,
          LAST_NAME         VARCHAR2 (25),
          column_name       varchar2(200) 
       );    
        employees_value      rec_typ;  

cur sys_refcursor;
BEGIN 
open cur for 
'select HIRE_DATE, LAST_NAME, '
|| column_name ||
' from EMPLOYEES
where 
MANAGER_ID is not null AND
EXTRACT(year FROM HIRE_DATE) = 2005 
order by ' || column_name;
loop 
fetch cur into employees_value;
exit when cur%notfound;
dbms_output.put_line(employees_value.HIRE_DATE || ' ' || employees_value.LAST_NAME || ' '  || employees_value.column_name);
end loop;
END;


exec punktDrugi('EMAIL');

create or replace NONEDITIONABLE PROCEDURE punktTrzeci(nameIn varchar2) 
IS 

TYPE rec_typ IS RECORD    
       (    
          ImieINazwisko     VARCHAR2 (2000),
          SALARY            Number,
          PHONE_NUMBER      Number
       );    
        employees_value      rec_typ;  

cur sys_refcursor;
nameLike nvarchar2(25);
BEGIN 
nameLike := ('''%' || nameIn || '%''');
open cur for 
'select FIRST_NAME || LAST_NAME AS ImieINazwisko, SALARY, PHONE_NUMBER
from EMPLOYEES
where 
SUBSTR(FIRST_NAME,3,3) = ''' || 'e' ||'''
AND
FIRST_NAME LIKE ' ||  nameLike || '
order by 
ImieINazwisko DESC,
SALARY ASC';
loop 
fetch cur into employees_value;
exit when cur%notfound;
dbms_output.put_line(employees_value.ImieINazwisko || ' ' || employees_value.SALARY || ' '  || employees_value.PHONE_NUMBER);
end loop;
END;

exec punktTrzeci('en');


select EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, ROUND(MONTHS_BETWEEN(JOB_HISTORY.END_DATE,JOB_HISTORY.START_DATE)) AS MONTHS,
case WHEN ROUND(MONTHS_BETWEEN(JOB_HISTORY.END_DATE,JOB_HISTORY.START_DATE)) < 150 THEN '10%'
     WHEN ROUND(MONTHS_BETWEEN(JOB_HISTORY.END_DATE,JOB_HISTORY.START_DATE)) > 150 AND ROUND(MONTHS_BETWEEN(JOB_HISTORY.END_DATE,JOB_HISTORY.START_DATE)) < 200 THEN '20%'
     WHEN ROUND(MONTHS_BETWEEN(JOB_HISTORY.END_DATE,JOB_HISTORY.START_DATE)) > 200 THEN '30%' END AS Wysokosc_Dodatku

from EMPLOYEES
join JOB_HISTORY on EMPLOYEES.EMPLOYEE_ID = JOB_HISTORY.EMPLOYEE_ID
order by ROUND(MONTHS_BETWEEN(JOB_HISTORY.END_DATE,JOB_HISTORY.START_DATE))

SELECT EMPLOYEES.DEPARTMENT_ID, ROUND(SUM(EMPLOYEES.SALARY)) as SUMA, ROUND(AVG(EMPLOYEES.SALARY)) AS SREDNIA FROM EMPLOYEES 
HAVING 
MIN(EMPLOYEES.SALARY) > 5000
AND
DEPARTMENT_ID IS NOT NULL
GROUP BY 
EMPLOYEES.DEPARTMENT_ID

SELECT EMPLOYEES.LAST_NAME, EMPLOYEES.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME, EMPLOYEES.JOB_ID
FROM EMPLOYEES
JOIN DEPARTMENTS ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
JOIN LOCATIONS ON LOCATIONS.LOCATION_ID = DEPARTMENTS.LOCATION_ID
WHERE LOCATIONS.CITY = 'Toronto'

SELECT EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, COLLEGUE.FIRST_NAME || COLLEGUE.LAST_NAME as WSPOLPRACOWNIK
FROM EMPLOYEES
JOIN EMPLOYEES COLLEGUE ON EMPLOYEES.DEPARTMENT_ID = COLLEGUE.DEPARTMENT_ID
WHERE EMPLOYEES.FIRST_NAME = 'Jennifer'

SELECT * FROM DEPARTMENTS
WHERE NOT EXISTS (SELECT * FROM EMPLOYEES WHERE EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID)

SELECT EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.JOB_ID, DEPARTMENTS.DEPARTMENT_NAME, EMPLOYEES.SALARY
FROM EMPLOYEES
JOIN DEPARTMENTS ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID

SELECT EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY
FROM EMPLOYEES
WHERE
EMPLOYEES.SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES)

SELECT EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME
FROM EMPLOYEES
JOIN EMPLOYEES SAMEDEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = SAMEDEPARTMENTS.DEPARTMENT_ID
WHERE SAMEDEPARTMENTS.LAST_NAME LIKE '%U%'




